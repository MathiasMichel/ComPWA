########### ComPWA Jamroot #############

path-constant TOP : . ;
path-constant PHYSICS : Physics ;
path-constant DPKINEMATICS : Physics/DPKinematics ;
import os ;
import path ;
local BOOST_ROOT = [ os.environ BOOST_ROOT ] ;
local ROOTSYS = [ os.environ ROOTSYS ] ;

local FOUND_ROOT_TOBJECT_HEADER = [ path.exists $(ROOTSYS)/include/TObject.h ] ;

if $(FOUND_ROOT_TOBJECT_HEADER)
{
  constant ROOT_INC_PATH : $(ROOTSYS)/include ;
  constant ROOT_LIB_PATH : $(ROOTSYS)/lib ;
}
else
{ 
  FOUND_ROOT_TOBJECT_HEADER = [ path.exists $(ROOTSYS)/include/root/TObject.h ] ;
  constant ROOT_INC_PATH : $(ROOTSYS)/include/root ;
  constant ROOT_LIB_PATH : $(ROOTSYS)/lib/root ;
}

if true != $(FOUND_ROOT_TOBJECT_HEADER)
{
  echo "WARNING: ROOT environment is not set up correctly! Please ensure ROOTSYS points to a valid ROOT installation" ;
}

echo "Using $(ROOT_INC_PATH) as ROOT include path!" ;
echo "Using $(ROOT_LIB_PATH) as ROOT library path!" ;

BOOSTLIBS = -lboost_log_setup -lboost_log -lboost_date_time -lboost_filesystem -lboost_program_options -lboost_regex -lboost_serialization -lboost_system -lboost_thread -lboost_test_exec_monitor -L$(BOOST_ROOT)/lib ;

project :
	requirements <include>$(TOP)
	<include>$(BOOST_ROOT)/include
	<define>BOOST_LOG_DYN_LINK
	<cxxflags>-ftemplate-depth-256
	<cxxflags>-std=c++0x
	<cxxflags>-DBOOST_SPIRIT_USE_PHOENIX_V3
	<linkflags>$(BOOSTLIBS)
	<linkflags>-fopenmp
	<warnings>off
	;

# This is the layout of the complete project tree. The configure.py script will comment/uncomment the following constant definitions
# disabling/enabling the appropriate subprojects. Of course the appropriate if statements have to be inserted around build-project rules
# and library sources etc...

constant build_test : 1 ;

constant build_Physics : 1 ;
constant build_AmplitudeSum : 1 ;
constant build_DPKinematics : 1 ;
constant build_BreitWigner : 1 ;
constant build_DecayTree : 1 ;
constant build_HelicityAmplitude : 1 ;
constant build_DynamicalDecayFunctions : 1 ;

constant build_DataReader : 1 ;
constant build_RootReader : 1 ;
constant build_AsciiReader : 1 ;
constant build_RootGenerator : 1 ;

constant build_Estimator : 1 ;
constant build_ChiOneD : 1 ;
constant build_MinLogLH : 1 ;
constant build_SliceFit : 1 ;

constant build_Optimizer : 1 ;
constant build_Minuit2 : 1 ;
#constant build_Geneva : 1 ;

# core should always be built
build-project Core ;
if $(build_test) && $(build_test) != 0 {
  build-project test ;
}
if $(build_Physics) && $(build_Physics) != 0 {
  build-project Physics ;
}
if $(build_DataReader) && $(build_DataReader) != 0 {
  build-project DataReader ;
}
if $(build_Estimator) && $(build_Estimator) != 0 {
  build-project Estimator ;
}
if $(build_Optimizer) && $(build_Optimizer) != 0 {
  build-project Optimizer ;
}
