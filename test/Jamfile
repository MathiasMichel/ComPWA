########### test apps #############
import os ;

local GENEVA = [ os.environ GENEVA ] ;
local QFTINC = [ os.environ QFT_INCLUDE ] ;
local QFT = [ os.environ QFT ] ;
local MINUIT2 = [ os.environ MINUIT2 ] ;

local rlibs = [ SHELL "$ROOTSYS/bin/root-config --libs" ] ;
ROOTLIBS = [ MATCH "(.*)[\n]" : $(rlibs) ] ;

project :
	requirements <include>./
	    <include>$(TOP)
		<include>$(ROOT_INC_PATH)
		<include>$(GENEVA)/include
        <include>$(QFT)/include
        <include>$(MINUIT2)/include
        #<include>$(TOP)/Tools/RootNeatPlotting
        <cxxflags>-pthread
	<linkflags>-L$(ROOT_LIB_PATH)
	<linkflags>$(ROOTLIBS)
	<linkflags>-lEG
	<linkflags>-lRooFit
	<linkflags>-lRooFitCore
	#<linkflags>-L$(TOP)/Tools/RootNeatPlotting/build
	#<linkflags>-lROOTNeatPlotting
	<linkflags>-L$(QFT)/lib
	<linkflags>-lqft++
	#<linkflags>-lgomp
	;

lib test : 
        [ glob *.cpp : *App.cpp ]
        $(TOP)/Optimizer//Optimizer
        $(TOP)/Physics/HelicityAmplitude//HelicityAmplitude
        : : ;
        

#exe cx0testApp : 
#        CX0TestApp.cpp 
#        test
#        : ;
        
exe treetestApp : 
        TreeTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        : ;
        
exe dataiftestApp : 
        DataIFTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/DataReader/RootReader//RootReader
        : ;

if $(GENEVA) { 
exe optimizertestApp : 
        OptimizerTestApp.cpp
        test
        $(TOP)/Core//ComPWA
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Estimator/MinLogLH//MinLogLH
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        $(TOP)/Optimizer/Geneva//GenevaIF
        $(TOP)/DataReader/RootGenerator//RootGenerator
        : ;
} else {
exe optimizertestApp : 
        MinuitTestApp.cpp
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/MinLogLH//MinLogLH
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/DataReader/RootGenerator//RootGenerator
        : ;
}

exe physicstestApp : 
        PhysicsTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/BreitWigner//BreitWigner
        : ;
        
exe estimatortestApp : 
        EstimatorTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/MinLogLH//MinLogLH
        $(TOP)/Estimator/ChiOneD//ChiOneD
        $(TOP)/Physics/BreitWigner//BreitWigner
        $(TOP)/DataReader/RootReader//RootReader
        : ;
        
exe integrationtestApp : 
        IntegrationTestApp.cpp
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/MinLogLH//MinLogLH
        $(TOP)/Physics/BreitWigner//BreitWigner
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
        
exe integrationtestbinnedApp : 
        IntegrationTestBinnedApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/ChiOneD//ChiOneD 
        $(TOP)/Physics/BreitWigner//BreitWigner   
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
        
#exe blackscholesApp : 
#        BlackScholesApp.cpp 
#        test
#        $(TOP)/Core//ComPWA
#        $(TOP)/Estimator/StockLeastSquares//StockLeastSquares 
#        $(TOP)/Physics/BlackScholes//BlackScholes   
#        $(TOP)/DataReader/StockReader//StockReader
#        $(TOP)/Optimizer/Minuit2//Minuit2IF
#        : ;
#        
#exe neuralnetworkApp : 
#        NeuralNetworkApp.cpp 
#        test
#        $(TOP)/Core//ComPWA
#        $(TOP)/Estimator/StockLeastSquares//StockLeastSquares 
#        $(TOP)/Physics/NeuralNetwork//NeuralNetwork   
#        $(TOP)/DataReader/StockReader//StockReader
#        $(TOP)/Optimizer/Geneva//GenevaIF
#        $(TOP)/Optimizer/Minuit2//Minuit2IF
#        : ;
        
exe runmanagertestApp : 
        RunManagerTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/MinLogLH//MinLogLH 
        $(TOP)/Physics/BreitWigner//BreitWigner   
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
        
exe gentwopartApp : 
        GenTwoPartApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/BreitWigner//BreitWigner  
        : ;
        
exe dpareaTestApp : 
        DPareaTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/DPKinematics//DPKinematics
        : ;

exe genRunManager : 
        GenRunManagerApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum  
        $(TOP)/DataReader/RootReader//RootReader  
        $(TOP)/DataReader/RootGenerator//RootGenerator
	$(TOP)/Physics/DPKinematics//DPKinematics
        : ;

exe gendalitzApp : 
        GenDalitzApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum  
        $(TOP)/Physics/DPKinematics//DPKinematics  
        : ;
        
exe compareTreeAmpApp : 
        CompareTreeAmpApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum  
        $(TOP)/DataReader/RootReader//RootReader  
        $(TOP)/Optimizer//Optimizer
        $(TOP)/Estimator/MinLogLH//MinLogLH 
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        $(TOP)/DataReader/RootGenerator//RootGenerator
	$(TOP)/Physics/DPKinematics//DPKinematics 
        : ;

exe dalitzplotApp : 
        DalitzDataPlotterApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/DataReader/RootReader//RootReader  
        $(TOP)/Physics/DPKinematics//DPKinematics  
        : ;
        
exe dalitzfitApp : 
        DalitzFitApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum
        $(TOP)/Physics/DPKinematics//DPKinematics
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Optimizer//Optimizer
        $(TOP)/Estimator/MinLogLH//MinLogLH
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
        
exe slicefitApp : 
        SliceFitApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum
        $(TOP)/Physics/DPKinematics//DPKinematics
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Estimator/SliceFit//SliceFit
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        $(TOP)/Physics/DPKinematics//DPKinematics
        : ;
        
exe helicityDecayTreeTestApp : 
        HelicityDecayTreeTestApp.cpp 
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/HelicityAmplitude//HelicityAmplitude
        $(TOP)/Physics/DecayTree//DecayTree
        : ;
        
exe helicityDecayTreeGeneratorTestApp : 
        HelicityDecayTreeGeneratorTestApp.cpp 
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/HelicityAmplitude//HelicityAmplitude
        $(TOP)/Physics/DecayTree//DecayTree
        : ;        
exe helicityCoherentAmplitudeEventGenApp : 
        HelicityCoherentAmplitudeEventGenApp.cpp 
        $(TOP)/Core//ComPWA
        $(TOP)/DataReader//RootReader
		$(TOP)/DataReader//RootGenerator
		$(TOP)/Physics/DecayTree//DecayTree
        $(TOP)/Physics/HelicityAmplitude//HelicityAmplitude
        : ;
        
exe helicityCoherentAmplitudePlotApp : 
        HelicityCoherentAmplitudePlotApp.cpp 
        $(TOP)/Core//ComPWA
        $(TOP)/DataReader//RootReader
		$(TOP)/DataReader//RootGenerator
		$(TOP)/Physics/DecayTree//DecayTree
        $(TOP)/Physics/HelicityAmplitude//HelicityAmplitude
        : ;
        
exe helicityAmplitudeFitApp : 
        HelicityAmplitudeFitApp.cpp 
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/DecayTree//DecayTree
        $(TOP)/Physics/HelicityAmplitude//HelicityAmplitude
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/DataReader//RootGenerator
        $(TOP)/Optimizer//Optimizer
        $(TOP)/Estimator/MinLogLH//MinLogLH
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;

exe serializeApp : 
        SerializationApp.cpp 
        test
        $(TOP)/Core//ComPWA
        : ;

install dist : test : <location>$(TOP)/lib <threading>single ;
#install dist2 : dalitzfitApp treetestApp cx0testApp dataiftestApp optimizertestApp physicstestApp blackscholesApp neuralnetworkApp : <location>$(TOP)/bin <threading>single ;
install dist2 : compareTreeAmpApp dalitzfitApp slicefitApp treetestApp dataiftestApp optimizertestApp physicstestApp : <location>$(TOP)/bin <threading>single ;
install dist3 : estimatortestApp integrationtestApp integrationtestbinnedApp runmanagertestApp gentwopartApp gendalitzApp dalitzplotApp serializeApp dpareaTestApp genRunManager : <location>$(TOP)/bin <threading>single ;

install dist4 : helicityDecayTreeTestApp helicityDecayTreeGeneratorTestApp helicityCoherentAmplitudeEventGenApp helicityCoherentAmplitudePlotApp helicityAmplitudeFitApp : <location>$(TOP)/bin <threading>single ;

#if $(GENEVA) { 
#install dist7 : genevatestApp : <location>$(TOP)/bin ;
#}

